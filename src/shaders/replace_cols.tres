[gd_resource type="Shader" format=2]

[resource]
code = "shader_type canvas_item;

uniform vec4 color_light : hint_color;
uniform vec4 color_dark : hint_color;
uniform bool outlined = false;


uniform vec4 line_color : hint_color = vec4(1);

void fragment() {
	vec4 cur_color = texture(TEXTURE, UV);
	if (cur_color == vec4(0,0,0,1)) {
		COLOR = color_dark;
	} else if (cur_color == vec4(1,1,1,1)) {
		COLOR = color_light;
	} else {
		if (outlined) {
			
			vec2 size = TEXTURE_PIXEL_SIZE * 1.0;

			// a cotes
		    float outline = texture(TEXTURE, UV + vec2(-size.x, 0)).a;
		    outline += texture(TEXTURE, UV + vec2(0, size.y)).a;
		    outline += texture(TEXTURE, UV + vec2(size.x, 0)).a;
		    outline += texture(TEXTURE, UV + vec2(0, -size.y)).a;
			
			// Corners
	//	    outline += texture(TEXTURE, UV + vec2(-size.x, size.y)).a;
	//	    outline += texture(TEXTURE, UV + vec2(size.x, size.y)).a;
	//	    outline += texture(TEXTURE, UV + vec2(-size.x, -size.y)).a;
	//	    outline += texture(TEXTURE, UV + vec2(size.x, -size.y)).a;
		    outline = min(outline, 1.0);

		    vec4 color = texture(TEXTURE, UV);
		    COLOR = mix(color, line_color, outline - color.a);
		} else { 
			COLOR = cur_color;
		}
	}
} "
